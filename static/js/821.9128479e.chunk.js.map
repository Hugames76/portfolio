{"version":3,"file":"static/js/821.9128479e.chunk.js","mappings":"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","sources":["data/whitelisting/whitelisting_en.js","data/whitelisting/whitelisting_fr.js","context/Whitelisting/WhitelistingSingleProjectContext.jsx","components/projects/Whitelisting_project/Whitelisting_projectProjectGallery.jsx","components/projects/Whitelisting_project/Whitelisting_projectProjectHeader.jsx","components/projects/Whitelisting_project/Whitelisting_projectProjectInfo.jsx","components/projects/Whitelisting_project/Whitelisting_projectProjectRelatedProjects.jsx","pages/WhitelistingProject.jsx"],"sourcesContent":["// Import images\nimport Image1 from \"../../images/whitelisting/whitelisting.png\";\nimport Image2 from \"../../images/whitelisting/win_xp.png\";\nimport Image3 from \"../../images/whitelisting/win_7.png\";\nimport Image4 from \"../../images/custom_os.png\";\nimport Image5 from \"../../images/pentest.png\";\nimport Image6 from \"../../images/developer-dark.png\";\n\nexport const singleProjectData = {\n  ProjectHeader: {\n    title: \"Whitelisting\",\n    publishDate: \"March - June 2023\",\n    tags: \"Development\",\n  },\n  ProjectImages: [\n    {\n      id: 1,\n      title: \"Windows XP\",\n      img: Image2,\n    },\n    {\n      id: 2,\n      title: \".Net Framework\",\n      img: Image1,\n    },\n    {\n      id: 3,\n      title: \"Windows 7\",\n      img: Image3,\n    },\n  ],\n  ProjectInfo: {\n    ClientHeading: \"About\",\n    CompanyInfo: [\n      {\n        id: 1,\n        title: \"Project\",\n        details: \"Whitelisting application\",\n      },\n      {\n        id: 2,\n        title: \"Company\",\n        details: \"Sidel\",\n      },\n      {\n        id: 3,\n        title: \"Website\",\n        details: \"https://sidel.com\",\n      },\n    ],\n    ObjectivesHeading: \"Objective\",\n    ObjectivesDetails:\n      \"3-month technical internship as part of my computer engineering training. The goal was to develop a whitelisting application for the company Sidel. The project was developed in C# with Windows Forms and .Net Framework.\",\n    Technologies: [\n      {\n        title: \"Tools & Technologies\",\n        techs: [\"C#\", \"Figma\", \"Windows Forms\", \".Net Framework\"],\n      },\n    ],\n    ProjectDetailsHeading: \"Challenges\",\n    ProjectDetails: [\n      {\n        id: 1,\n        details:\n          \"As part of my training as a computer engineer, I did a 3-month technical internship with Sidel. The aim was to develop a whitelisting application for our Windows XP and Windows 7 operating systems. The project was carried out in C# with Windows Forms and .Net Framework, so as not to reveal how the application works, I'd be very vague on the details, but I'll try to explain the main features.\",\n      },\n      {\n        id: 2,\n        details:\n          \"First, I had to research how whitelisting applications work and the different development methods. I then made mock-ups on Figma to get an idea of the application's graphical interface. Once the mock-ups had been validated, I started developing the application, knowing that on Windows XP we're very limited in our choices. So I started by developing the basic functionalities to check that it would work properly on the various systems, then added more advanced features.\",\n      },\n      {\n        id: 3,\n        details:\n          \"I then tested the application on the Windows XP and Windows 7 operating systems several times to find and correct bugs. Once the application was finished, I had to make a presentation of my work, as well as write an internship report and technical documentation.\",\n      },\n    ],\n    SocialSharingHeading: \"\",\n    SocialSharing: [],\n  },\n  RelatedProject: {\n    title: \"Related Projects\",\n    Projects: [\n      {\n        id: 1,\n        title: \"Custom OS\",\n        img: Image4,\n        url: \"../../project/custom_os\",\n      },\n      {\n        id: 2,\n        title: \"Pentesting Project\",\n        img: Image5,\n        url: \"../../project/pentesting_project\",\n      },\n      {\n        id: 3,\n        title: \"Portfolio\",\n        img: Image6,\n        url: \"../../project/portfolio\",\n      },\n    ],\n  },\n};\n","// Import images\nimport Image1 from \"../../images/whitelisting/whitelisting.png\";\nimport Image2 from \"../../images/whitelisting/win_xp.png\";\nimport Image3 from \"../../images/whitelisting/win_7.png\";\nimport Image4 from \"../../images/custom_os.png\";\nimport Image5 from \"../../images/pentest.png\";\nimport Image6 from \"../../images/developer-dark.png\";\n\nexport const singleProjectData = {\n  ProjectHeader: {\n    title: \"Projet de Whitelisting\",\n    publishDate: \"Mars - Juin 2023\",\n    tags: \"DÃ©veloppement\",\n  },\n  ProjectImages: [\n    {\n      id: 1,\n      title: \"Windows XP\",\n      img: Image2,\n    },\n    {\n      id: 2,\n      title: \".Net Framework\",\n      img: Image1,\n    },\n    {\n      id: 3,\n      title: \"Windows 7\",\n      img: Image3,\n    },\n  ],\n  ProjectInfo: {\n    ClientHeading: \"A propos\",\n    CompanyInfo: [\n      {\n        id: 1,\n        title: \"Projet\",\n        details: \"Application de whitelisting\",\n      },\n      {\n        id: 2,\n        title: \"Entreprise\",\n        details: \"Sidel\",\n      },\n      {\n        id: 3,\n        title: \"Site Web\",\n        details: \"https://sidel.com\",\n      },\n    ],\n    ObjectivesHeading: \"Objectifs\",\n    ObjectivesDetails:\n      \"Stage Technique de 3 mois dans le cadre de ma formation d'ingÃ©nieur en informatique. Le but Ã©tait de dÃ©velopper une application de whitelisting pour l'entreprise Sidel. Le projet a Ã©tÃ© rÃ©alisÃ© en C# avec Windows Forms et .Net Framework.\",\n    Technologies: [\n      {\n        title: \"Outils & Technologies\",\n        techs: [\"C#\", \"Figma\", \"Windows Forms\", \".Net Framework\"],\n      },\n    ],\n    ProjectDetailsHeading: \"DÃ©fis\",\n    ProjectDetails: [\n      {\n        id: 1,\n        details:\n          \"Dans le cadre de ma  formation d'ingÃ©nieur en informatique, j'ai effectuÃ© un stage technique de 3 mois dans l'entreprise Sidel. Le but Ã©tait de dÃ©velopper une application de whitelisting pour nos systÃ¨mes d'exploitation Windows XP et Windows 7. Le projet a Ã©tÃ© rÃ©alisÃ© en C# avec Windows Forms et .Net Framework, afin de ne pas dÃ©voiler comment fonctionne l'application, je serais trÃ¨s vague sur les dÃ©tails.\",\n      },\n      {\n        id: 2,\n        details:\n          \"Dans un premier temps, j'ai dÃ» faire des recherches sur le fonctionnement des applications de whitelisting et sur les diffÃ©rentes mÃ©thodes de dÃ©veloppement. J'ai ensuite rÃ©alisÃ© des maquettes sur Figma pour avoir une idÃ©e de l'interface graphique de l'application. Une fois les maquettes validÃ©es, j'ai commencÃ© Ã  dÃ©velopper l'application sachant que sur Windows XP nous sommes trÃ¨s limitÃ© dans nos choix. J'ai donc commencÃ© par dÃ©velopper les fonctionnalitÃ©s de base afin de vÃ©rifiÃ© le bon fonctionnement sur les diffÃ©rents systÃ¨me, puis j'ai ajoutÃ© des fonctionnalitÃ©s plus avancÃ©es.\",\n      },\n      {\n        id: 3,\n        details:\n          \" J'ai ensuite testÃ© l'application sur les systÃ¨mes d'exploitation Windows XP et Windows 7 plusieurs fois dans le but de trouver des bugs et de les corriger. Une fois l'application terminÃ©e, j'ai dÃ» faire une prÃ©sentation de mon travail ainsi que rÃ©diger un rapport de stage et une documentation technique.\",\n      },\n    ],\n    SocialSharingHeading: \"\",\n    SocialSharing: [],\n  },\n  RelatedProject: {\n    title: \"Projets similaires\",\n    Projects: [\n      {\n        id: 1,\n        title: \"Custom OS\",\n        img: Image4,\n        url: \"../../project/systeme_d'exploitation_personnalisÃ©\",\n      },\n      {\n        id: 2,\n        title: \"Pentesting Project\",\n        img: Image5,\n        url: \"../../project/projet_de_pentesting\",\n      },\n      {\n        id: 3,\n        title: \"Portfolio\",\n        img: Image6,\n        url: \"../../project/portfolio\",\n      },\n    ],\n  },\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useState, createContext, useContext, useEffect } from \"react\";\nimport { LanguageContext } from \"../../context/LanguageContext\";\nimport { singleProjectData as singleProjectDataJsonEN } from \"../../data/whitelisting/whitelisting_en\";\nimport { singleProjectData as singleProjectDataJsonFR } from \"../../data/whitelisting/whitelisting_fr\";\n\nconst SingleProjectContext = createContext();\n\nexport const SingleProjectProvider = ({ children }) => {\n  const { language } = useContext(LanguageContext);\n  const [singleProjectData, setSingleProjectData] = useState(null);\n\n  useEffect(() => {\n    if (language === \"en\") {\n      setSingleProjectData(singleProjectDataJsonEN);\n    } else if (language === \"fr\") {\n      setSingleProjectData(singleProjectDataJsonFR);\n    }\n  }, [language]);\n\n  if (!singleProjectData) {\n    return null;\n  }\n\n  return (\n    <SingleProjectContext.Provider value={{ singleProjectData, setSingleProjectData }}>\n      {children}\n    </SingleProjectContext.Provider>\n  );\n};\n\nSingleProjectProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default SingleProjectContext;\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport SingleProjectContext from \"../../../context/Whitelisting/WhitelistingSingleProjectContext\";\n\nconst ProjectGallery = () => {\n  const { singleProjectData } = useContext(SingleProjectContext);\n\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-3 sm:gap-10 mt-12\">\n      {singleProjectData.ProjectImages.map((project) => {\n        return (\n          <div className=\"mb-10 sm:mb-0\" key={project.id}>\n            {project.url}\n            <img\n              src={project.img}\n              className=\"rounded-xl cursor-pointer shadow-lg sm:shadow-none\"\n              alt={project.title}\n              key={project.id}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ProjectGallery;\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport { FiClock, FiTag } from \"react-icons/fi\";\nimport SingleProjectContext from \"../../../context/Whitelisting/WhitelistingSingleProjectContext\";\n\nconst Whitelisting_projectProjectHeader = () => {\n  const { singleProjectData } = useContext(SingleProjectContext);\n\n  return (\n    <div>\n      <p className=\"font-general-medium text-left text-3xl sm:text-4xl font-bold text-primary-dark dark:text-primary-light mt-14 sm:mt-20 mb-7\">\n        {singleProjectData.ProjectHeader.title}\n      </p>\n      <div className=\"flex\">\n        <div className=\"flex items-center mr-10\">\n          <FiClock className=\"text-lg text-ternary-dark dark:text-ternary-light\" />\n          <span className=\"font-general-regular ml-2 leading-none text-primary-dark dark:text-primary-light\">\n            {singleProjectData.ProjectHeader.publishDate}\n          </span>\n        </div>\n        <div className=\"flex items-center\">\n          <FiTag className=\"text-lg text-ternary-dark dark:text-ternary-light\" />\n          <span className=\"font-general-regular ml-2 leading-none text-primary-dark dark:text-primary-light\">\n            {singleProjectData.ProjectHeader.tags}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Whitelisting_projectProjectHeader;\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport SingleProjectContext from \"../../../context/Whitelisting/WhitelistingSingleProjectContext\";\n\nconst Whitelisting_projectProjectInfo = () => {\n  const { singleProjectData } = useContext(SingleProjectContext);\n\n  return (\n    <div className=\"block sm:flex gap-0 sm:gap-10 mt-14\">\n      <div className=\"w-full sm:w-1/3 text-left\">\n        {/* Single project client details */}\n        <div className=\"mb-7\">\n          <p className=\"font-general-regular text-2xl font-semibold text-secondary-dark dark:text-secondary-light mb-2\">\n            {singleProjectData.ProjectInfo.ClientHeading}\n          </p>\n          <ul className=\"leading-loose\">\n            {singleProjectData.ProjectInfo.CompanyInfo.map((info) => {\n              return (\n                <li\n                  className=\"font-general-regular text-ternary-dark dark:text-ternary-light\"\n                  key={info.id}\n                >\n                  <span>{info.title}: </span>\n                  <a\n                    href=\"https://www.sidel.com/en\"\n                    className={\n                      info.title === \"Website\" || info.title === \"Phone\"\n                        ? \"hover:underline hover:text-indigo-500 dark:hover:text-indigo-400 cursor-pointer duration-300\"\n                        : \"\"\n                    }\n                    aria-label=\"Project Website and Phone\"\n                  >\n                    {info.details}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        {/* Single project objectives */}\n        <div className=\"mb-7\">\n          <p className=\"font-general-regular text-2xl font-semibold text-ternary-dark dark:text-ternary-light mb-2\">\n            {singleProjectData.ProjectInfo.ObjectivesHeading}\n          </p>\n          <p className=\"font-general-regular text-primary-dark dark:text-ternary-light\">\n            {singleProjectData.ProjectInfo.ObjectivesDetails}\n          </p>\n        </div>\n\n        {/* Single project technologies */}\n        <div className=\"mb-7\">\n          <p className=\"font-general-regular text-2xl font-semibold text-ternary-dark dark:text-ternary-light mb-2\">\n            {singleProjectData.ProjectInfo.Technologies[0].title}\n          </p>\n          <p className=\"font-general-regular text-primary-dark dark:text-ternary-light\">\n            {singleProjectData.ProjectInfo.Technologies[0].techs.join(\", \")}\n          </p>\n        </div>\n\n        {/* Single project social sharing */}\n        <div>\n          <p className=\"font-general-regular text-2xl font-semibold text-ternary-dark dark:text-ternary-light mb-2\">\n            {singleProjectData.ProjectInfo.SocialSharingHeading}\n          </p>\n          <div className=\"flex items-center gap-3 mt-5\">\n            {singleProjectData.ProjectInfo.SocialSharing.map((social) => {\n              return (\n                <a\n                  key={social.id}\n                  href={social.url}\n                  target=\"__blank\"\n                  aria-label=\"Share Project\"\n                  className=\"bg-ternary-light dark:bg-ternary-dark text-gray-400 hover:text-primary-dark dark:hover:text-primary-light p-2 rounded-lg shadow-sm duration-500\"\n                >\n                  <span className=\"text-lg lg:text-2xl\">{social.icon}</span>\n                </a>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/*  Single project right section */}\n      <div className=\"w-full sm:w-2/3 text-left mt-10 sm:mt-0\">\n        <p className=\"font-general-regular text-primary-dark dark:text-primary-light text-2xl font-bold mb-7\">\n          {singleProjectData.ProjectInfo.ProjectDetailsHeading}\n        </p>\n        {singleProjectData.ProjectInfo.ProjectDetails.map((details) => {\n          return (\n            <p\n              key={details.id}\n              className=\"font-general-regular mb-5 text-lg text-ternary-dark dark:text-ternary-light\"\n            >\n              {details.details}\n            </p>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Whitelisting_projectProjectInfo;\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport SingleProjectContext from \"../../../context/Whitelisting/WhitelistingSingleProjectContext\";\nimport { Link } from \"react-router-dom\";\n\nconst Whitelisting_projectProjectRelatedProjects = () => {\n  const { singleProjectData } = useContext(SingleProjectContext);\n\n  return (\n    <div className=\"mt-10 pt-10 sm:pt-14 sm:mt-20 border-t-2 border-primary-light dark:border-secondary-dark\">\n      <p className=\"font-general-regular text-primary-dark dark:text-primary-light text-3xl font-bold mb-10 sm:mb-14 text-left\">\n        {singleProjectData.RelatedProject.title}\n      </p>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-4 gap-10\">\n        {singleProjectData.RelatedProject.Projects.map((project) => {\n          return (\n            <Link to={project.url} key={project.id}>\n              <img\n                src={project.img}\n                className=\"rounded-xl cursor-pointer shadow-lg sm:shadow-none\"\n                alt={project.title}\n              />\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Whitelisting_projectProjectRelatedProjects;\n","import React from \"react\";\nimport ProjectGallery from \"../components/projects/Whitelisting_project/Whitelisting_projectProjectGallery\";\nimport ProjectHeader from \"../components/projects/Whitelisting_project/Whitelisting_projectProjectHeader\";\nimport ProjectInfo from \"../components/projects/Whitelisting_project/Whitelisting_projectProjectInfo\";\nimport ProjectRelatedProjects from \"../components/projects/Whitelisting_project/Whitelisting_projectProjectRelatedProjects\";\nimport { SingleProjectProvider } from \"../context/Whitelisting/WhitelistingSingleProjectContext\";\nimport { motion } from \"framer-motion\";\n\nconst WhitelistingProject = () => {\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1, delay: 1 }}\n      transition={{\n        ease: \"easeInOut\",\n        duration: 0.6,\n        delay: 0.15,\n      }}\n      className=\"container mx-auto mt-5 sm:mt-10\"\n    >\n      <SingleProjectProvider>\n        <ProjectHeader />\n        <ProjectGallery />\n        <ProjectInfo />\n        <ProjectRelatedProjects />\n      </SingleProjectProvider>\n    </motion.div>\n  );\n};\n\nexport default WhitelistingProject;\n"],"names":["singleProjectData","ProjectHeader","title","publishDate","tags","ProjectImages","id","img","Image2","Image1","Image3","ProjectInfo","ClientHeading","CompanyInfo","details","ObjectivesHeading","ObjectivesDetails","Technologies","techs","ProjectDetailsHeading","ProjectDetails","SocialSharingHeading","SocialSharing","RelatedProject","Projects","Image4","url","Image5","Image6","SingleProjectContext","createContext","SingleProjectProvider","_ref","children","language","useContext","LanguageContext","setSingleProjectData","useState","useEffect","singleProjectDataJsonEN","singleProjectDataJsonFR","_jsx","Provider","value","ProjectGallery","className","map","project","_jsxs","src","alt","Whitelisting_projectProjectHeader","FiClock","FiTag","Whitelisting_projectProjectInfo","info","href","join","social","target","icon","Whitelisting_projectProjectRelatedProjects","Link","to","WhitelistingProject","motion","initial","opacity","animate","delay","transition","ease","duration","ProjectRelatedProjects"],"sourceRoot":""}